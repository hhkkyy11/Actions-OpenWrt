name: Repo Dispatcher
on:
  workflow_dispatch:
    inputs:
      target:
        description: 'dev1,dev2'
        required: false
        default: 'x86_64'

jobs:
  set_matrix:
    runs-on: ubuntu-latest
    outputs:
      device: ${{ steps.set_matrix.outputs.matrix }}
      #event_inputs_json: ${{ steps.set_matrix.outputs.matrix }}
    name: "set matrix for: ${{ github.event.inputs.target }}"
    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: prinf info
      id: set_matrix
      run: |
        if [ -z "${{ github.event.inputs.target }}" ];then
          matrix=$(find build/ -maxdepth 2 -type f -name set_matrix.sh | awk -F/ '{print $2}' | paste -s - -d ',')
        else
          matrix=${{ github.event.inputs.target }}
        fi
        echo '::set-output name=matrix::["'${matrix}'"]'
        echo 'name=matrix: ["'${matrix}'"]'
  build:
    runs-on: ubuntu-latest
    needs: set_matrix
    strategy:
      fail-fast: false
      matrix:
        device: ${{ fromJson(needs.set_matrix.outputs.device) }}
    steps:
        - name: Trigger Compile
          run: |
            branch=${GITHUB_REF##*/};
            curl \
            -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.gh_token }}" \
            -d '{
              "event_type":"build ${{ matrix.device }}",
              "client_payload":{
                  "branch":"'$branch'",
                  "device":"${{ matrix.device }}"
              }
            }'
